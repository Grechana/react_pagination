{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pagesArray","itemSeparationForPages","filter","item","className","href","onClick","map","page","App","state","itemsPerPageOptions","setItemsPerPage","num","setState","handlePageChange","this","startWithItem","endWithItem","id","value","onChange","event","target","htmlFor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAad,EAAW,EAAGW,GAG3BI,EAFaf,EAAW,EAAGO,GAESS,QAAO,SAAAC,GAC/C,OAAoB,IAAhBR,EACKQ,GAAQT,EAGVS,GAAQT,EAAUC,GACtBQ,EAAOT,GAAWC,EAAc,MAGrC,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAA2B,IAAhBT,EAAoB,qBAAuB,YADxD,SAGE,mBACE,UAAQ,WACRS,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,WACa,IAAhBX,GACFC,EAAaD,EAAc,IAPjC,oBAcDK,EAAWO,KAAI,SAAAC,GAAI,OAClB,oBACEJ,UAAWI,IAASb,EAAc,mBAAqB,YADzD,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,WACPV,EAAaY,IALjB,SAQGA,KAVEA,MAcT,oBACEJ,UACET,IAAgBE,EACZ,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QAAS,WACHX,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,uBAeJ,6BACIM,EAAuBM,KAAI,SAAAJ,GAAI,OAC/B,oBACE,UAAQ,OADV,wBAGWA,cCxFRM,EAAb,4MACEC,MAAQ,CACNC,oBAAqB,CAAC,EAAG,EAAG,GAAI,IAChCjB,QAAS,EACTC,YAAa,EACbF,MAAO,IALX,EAQEmB,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZpB,QAASmB,EACTlB,YAAa,KAXnB,EAeEoB,iBAAmB,SAACP,GAClB,EAAKM,SAAS,CACZnB,YAAaa,KAjBnB,4CAqBE,WAAU,IAAD,OACP,EAKIQ,KAAKN,MAJPhB,EADF,EACEA,QACAiB,EAFF,EAEEA,oBACAhB,EAHF,EAGEA,YACAF,EAJF,EAIEA,MAGIwB,EAAiBvB,GAAWC,EAAc,GAAM,EAChDuB,EAAcvB,EAAcD,EAAUD,EACxCA,EACAE,EAAcD,EAElB,OACE,sBAAKU,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCsB,EADjC,cACoDC,EADpD,eACsEzB,EADtE,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAO1B,EACP2B,SAAU,SAAAC,GACR,EAAKV,iBAAiBU,EAAMC,OAAOH,QANvC,SAUGT,EAAoBJ,KAAI,SAAAJ,GAAI,OAC3B,wBAEEiB,MAAOjB,EAFT,SAIGA,GAHIA,UASb,uBAAOqB,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEX,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcoB,KAAKD,0BAzE7B,GAAyBU,IAAMC,WCD/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.22b7e732.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (tabId: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pagesArray = getNumbers(1, lastPage);\n  const itemsArray = getNumbers(1, total);\n\n  const itemSeparationForPages = itemsArray.filter(item => {\n    if (currentPage === 1) {\n      return item <= perPage;\n    }\n\n    return item <= perPage * currentPage\n    && item > perPage * (currentPage - 1);\n  });\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={currentPage === 1 ? 'page-item disabled' : 'page-item'}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pagesArray.map(page => (\n          <li\n            className={page === currentPage ? 'page-item active' : 'page-item'}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                onPageChange(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={\n            currentPage === lastPage\n              ? 'page-item disabled'\n              : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        { itemSeparationForPages.map(item => (\n          <li\n            data-cy=\"item\"\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport class App extends React.Component {\n  state = {\n    itemsPerPageOptions: [3, 5, 10, 20],\n    perPage: 5,\n    currentPage: 1,\n    total: 42,\n  };\n\n  setItemsPerPage = (num:number) => {\n    this.setState({\n      perPage: num,\n      currentPage: 1,\n    });\n  };\n\n  handlePageChange = (page:number) => {\n    this.setState({\n      currentPage: page,\n    });\n  };\n\n  render() {\n    const {\n      perPage,\n      itemsPerPageOptions,\n      currentPage,\n      total,\n    } = this.state;\n\n    const startWithItem = (perPage * (currentPage - 1)) + 1;\n    const endWithItem = currentPage * perPage > total\n      ? total\n      : currentPage * perPage;\n\n    return (\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${currentPage} (items ${startWithItem} - ${endWithItem} of ${total})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              value={perPage}\n              onChange={event => {\n                this.setItemsPerPage(+event.target.value);\n              }}\n            >\n\n              {itemsPerPageOptions.map(item => (\n                <option\n                  key={item}\n                  value={item}\n                >\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          currentPage={currentPage}\n          onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}