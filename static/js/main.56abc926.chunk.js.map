{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","arrOfPages","Array","from","length","Math","ceil","_v","k","arrOfItems","className","href","onClick","map","page","filter","item","itemFilter","App","state","itemsPerPageOptions","setItemsPerPage","num","setState","handlePageChange","this","id","value","onChange","event","target","htmlFor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAOaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,MAAMC,KAAK,CAC5BC,OAAQC,KAAKC,KAAKT,EAAQC,KACzB,SAACS,EAAIC,GAAL,OAAWA,EAAI,KACZC,EAAaP,MAAMC,KAAK,CAC5BC,OAAQP,IACP,SAACU,EAAIC,GAAL,OAAWA,EAAI,KAElB,OACE,qCACE,qBAAIE,UAAU,aAAd,UACE,oBACEA,UAA2B,IAAhBX,EAAoB,qBAAuB,YADxD,SAGE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QAAS,WACPZ,EAAaD,EAAc,IAN/B,oBAYDE,EAAWY,KAAI,SAAAC,GAAI,OAClB,oBACEJ,UAAWI,IAASf,EAAc,mBAAqB,YADzD,SAIE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,WACPZ,EAAac,IALjB,SAQGA,KAVEA,MAcT,oBACEJ,UACEX,IAAgBM,KAAKC,KAAKT,EAAQC,GAC9B,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRY,UAAU,YACVC,KAAK,QACL,gBAAeZ,IAAgBM,KAAKC,KAAKT,EAAQC,GACjDc,QAAS,WACPZ,EAAaD,EAAc,IAN/B,uBAaJ,6BACGU,EAAWM,QAAO,SAAAC,GACjB,OAAoB,IAAhBjB,EACKiB,GAAQlB,EAGVkB,GAAQlB,EAAUC,GACtBiB,EAAOlB,GAAWC,EAAc,MAClCc,KAAI,SAAAI,GAAU,OACf,oBACE,UAAQ,OADV,wBAGWA,cC9ERC,EAAb,4MACEC,MAAQ,CACNC,oBAAqB,CAAC,EAAG,EAAG,GAAI,IAChCtB,QAAS,EACTC,YAAa,EACbF,MAAO,IALX,EAQEwB,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZzB,QAASwB,EACTvB,YAAa,KAXnB,EAeEyB,iBAAmB,SAACV,GAClB,EAAKS,SAAS,CACZxB,YAAae,KAjBnB,4CAqBE,WAAU,IAAD,OACP,EAKIW,KAAKN,MAJPrB,EADF,EACEA,QACAsB,EAFF,EAEEA,oBACArB,EAHF,EAGEA,YACAF,EAJF,EAIEA,MAGF,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACkCD,GAAWC,EAAc,GAAM,EADjE,cACwEA,EAAcD,EADtF,eACoGD,EADpG,OAIA,sBAAKa,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAO7B,EACP8B,SAAU,SAAAC,GACR,EAAKR,iBAAiBQ,EAAMC,OAAOH,QANvC,SAUGP,EAAoBP,KAAI,SAAAG,GAAI,OAC3B,wBAAQW,MAAOX,EAAf,SACGA,WAMT,uBAAOe,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEb,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcyB,KAAKD,0BAjE7B,GAAyBQ,IAAMC,WCN/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.56abc926.chunk.js","sourcesContent":["type Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (tabId: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const arrOfPages = Array.from({\n    length: Math.ceil(total / perPage),\n  }, (_v, k) => k + 1);\n  const arrOfItems = Array.from({\n    length: total,\n  }, (_v, k) => k + 1);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={currentPage === 1 ? 'page-item disabled' : 'page-item'}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              onPageChange(currentPage - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {arrOfPages.map(page => (\n          <li\n            className={page === currentPage ? 'page-item active' : 'page-item'}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                onPageChange(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={\n            currentPage === Math.ceil(total / perPage)\n              ? 'page-item disabled'\n              : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === Math.ceil(total / perPage)}\n            onClick={() => {\n              onPageChange(currentPage + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {arrOfItems.filter(item => {\n          if (currentPage === 1) {\n            return item <= perPage;\n          }\n\n          return item <= perPage * currentPage\n          && item > perPage * (currentPage - 1);\n        }).map(itemFilter => (\n          <li\n            data-cy=\"item\"\n          >\n            {`Item ${itemFilter}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\n// import { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// const items = getNumbers(1, 42)\n//   .map(n => `Item ${n}`);\n\nexport class App extends React.Component {\n  state = {\n    itemsPerPageOptions: [3, 5, 10, 20],\n    perPage: 5,\n    currentPage: 1,\n    total: 42,\n  };\n\n  setItemsPerPage = (num:number) => {\n    this.setState({\n      perPage: num,\n      currentPage: 1,\n    });\n  };\n\n  handlePageChange = (page:number) => {\n    this.setState({\n      currentPage: page,\n    });\n  };\n\n  render() {\n    const {\n      perPage,\n      itemsPerPageOptions,\n      currentPage,\n      total,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Items with Pagination</h1>\n\n        <p className=\"lead\" data-cy=\"info\">\n          {`Page ${currentPage} (items ${(perPage * (currentPage - 1)) + 1} - ${currentPage * perPage} of ${total})`}\n        </p>\n\n        <div className=\"form-group row\">\n          <div className=\"col-3 col-sm-2 col-xl-1\">\n            <select\n              data-cy=\"perPageSelector\"\n              id=\"perPageSelector\"\n              className=\"form-control\"\n              value={perPage}\n              onChange={event => {\n                this.setItemsPerPage(+event.target.value);\n              }}\n            >\n\n              {itemsPerPageOptions.map(item => (\n                <option value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n            items per page\n          </label>\n        </div>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          currentPage={currentPage}\n          onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}